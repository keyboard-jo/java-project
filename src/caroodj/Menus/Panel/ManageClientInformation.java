/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Menus.Panel;

import java.io.IOException;
import java.sql.Date;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.HashMap;

import javax.swing.BoxLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.html.parser.Entity;

import Objects.Client;
import Objects.EntityId;
import Objects.PersonDataFile;

/**
 *
 * @author JUSTIN
 */
public class ManageClientInformation extends javax.swing.JPanel {

    /**
     * Creates new form ManageClientInformation
     */
    public ManageClientInformation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        queryFull = new JPanel();

        queryFull.setLayout(new BoxLayout(queryFull, BoxLayout.Y_AXIS));

        clientQueries.add(new ClientQuery());

        queryFull.add(clientQueries.get(0));

        queryScroll = new javax.swing.JScrollPane(queryFull);

        typeGroup = new javax.swing.ButtonGroup();
        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        crudPanel = new javax.swing.JPanel();
        crudMenuPanel = new javax.swing.JPanel();
        addMenu = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        typeLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        addMenuLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        DOBLabel = new javax.swing.JLabel();
        DOBField = new com.toedter.calendar.JDateChooser();
        clientButton = new javax.swing.JRadioButton();
        adminButton = new javax.swing.JRadioButton();
        updateMenu = new javax.swing.JPanel();
        usernameLabel1 = new javax.swing.JLabel();
        usernameField1 = new javax.swing.JTextField();
        passwordLabel1 = new javax.swing.JLabel();
        emailLabel1 = new javax.swing.JLabel();
        emailField1 = new javax.swing.JTextField();
        updateMenuLabel = new javax.swing.JLabel();
        nameLabel1 = new javax.swing.JLabel();
        nameField1 = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        cleintIDLabel = new javax.swing.JLabel();
        clientID = new javax.swing.JLabel();
        passwordField1 = new javax.swing.JPasswordField();
        DOBLabel1 = new javax.swing.JLabel();
        DOBField1 = new com.toedter.calendar.JDateChooser();
        removeMenu = new javax.swing.JPanel();
        removeMenuLabel = new javax.swing.JLabel();
        clientIDLabel = new javax.swing.JLabel();
        clientIDField = new javax.swing.JTextField();
        removeButton = new javax.swing.JButton();
        crudButtonPanel = new javax.swing.JPanel();
        previousButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        clientQueryPanel = new javax.swing.JPanel();
        addQueryButton = new javax.swing.JButton();
        removeQueryButton = new javax.swing.JButton();
        clearQueryButton = new javax.swing.JButton();
        searchQueryButton = new javax.swing.JButton();
        tableScroll = new javax.swing.JScrollPane();
        clientTable = new javax.swing.JTable();

        setMinimumSize(new java.awt.Dimension(1298, 1012));
        setPreferredSize(new java.awt.Dimension(1670, 1012));

        titleLabel.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        titleLabel.setText("MANAGE CLIENT INFORMATION");
        titlePanel.add(titleLabel);

        crudPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Add, Remove, Update Client"));

        crudMenuPanel.setLayout(new java.awt.CardLayout());

        addMenu.setMinimumSize(new java.awt.Dimension(1276, 200));

        usernameLabel.setText("Username:");

        usernameField.setMinimumSize(new java.awt.Dimension(178, 22));
        usernameField.setPreferredSize(new java.awt.Dimension(178, 22));

        typeLabel.setText("Type:");

        passwordLabel.setText("Password:");
        passwordField.setMinimumSize(new java.awt.Dimension(178, 22));
        passwordField.setPreferredSize(new java.awt.Dimension(178, 22));

        emailLabel.setText("Email:");

        emailField.setMinimumSize(new java.awt.Dimension(178, 22));
        emailField.setPreferredSize(new java.awt.Dimension(178, 22));

        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        addMenuLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addMenuLabel.setText("Add Client Menu");

        nameLabel.setText("Name:");

        nameField.setMinimumSize(new java.awt.Dimension(178, 22));
        nameField.setPreferredSize(new java.awt.Dimension(178, 22));

        DOBLabel.setText("DOB:");

        typeGroup.add(clientButton);
        clientButton.setText("client");
        clientButton.setActionCommand(clientButton.getText());

        typeGroup.add(adminButton);
        adminButton.setText("admin");
        adminButton.setActionCommand(adminButton.getText());

        javax.swing.GroupLayout addMenuLayout = new javax.swing.GroupLayout(addMenu);
        addMenu.setLayout(addMenuLayout);
        addMenuLayout.setHorizontalGroup(
            addMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMenuLayout.createSequentialGroup()
                .addGap(389, 389, 389)
                .addGroup(addMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addMenuLabel)
                    .addGroup(addMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(addButton)
                        .addGroup(addMenuLayout.createSequentialGroup()
                            .addGroup(addMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(typeLabel)
                                .addComponent(usernameLabel)
                                .addComponent(nameLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(addMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(addMenuLayout.createSequentialGroup()
                                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(passwordLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addMenuLayout.createSequentialGroup()
                                    .addComponent(clientButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(adminButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(emailLabel))
                                .addGroup(addMenuLayout.createSequentialGroup()
                                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(DOBLabel)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(addMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(emailField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(passwordField)
                                .addComponent(DOBField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(392, 392, 392))
        );
        addMenuLayout.setVerticalGroup(
            addMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMenuLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(addMenuLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeLabel)
                    .addComponent(emailLabel)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientButton)
                    .addComponent(adminButton))
                .addGap(18, 18, 18)
                .addGroup(addMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nameLabel)
                        .addComponent(DOBLabel))
                    .addComponent(DOBField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addButton)
                .addGap(38, 38, 38))
        );

        crudMenuPanel.add(addMenu, "addMenu");

        updateMenu.setMinimumSize(new java.awt.Dimension(1276, 210));
        updateMenu.setPreferredSize(new java.awt.Dimension(1276, 210));

        usernameLabel1.setText("Username:");

        usernameField1.setMinimumSize(new java.awt.Dimension(178, 22));
        usernameField1.setPreferredSize(new java.awt.Dimension(178, 22));


        passwordLabel1.setText("Password:");

        emailLabel1.setText("Email:");

        emailField1.setMinimumSize(new java.awt.Dimension(178, 22));
        emailField1.setPreferredSize(new java.awt.Dimension(178, 22));

        updateMenuLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateMenuLabel.setText("Update Client Menu");

        nameLabel1.setText("Name:");

        nameField1.setMinimumSize(new java.awt.Dimension(178, 22));
        nameField1.setPreferredSize(new java.awt.Dimension(178, 22));

        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        cleintIDLabel.setText("Client ID:");

        clientID.setText("XXXXXXXXXXXXXXXXXXXXXXXXX");

        DOBLabel1.setText("DOB:");

        javax.swing.GroupLayout updateMenuLayout = new javax.swing.GroupLayout(updateMenu);
        updateMenu.setLayout(updateMenuLayout);
        updateMenuLayout.setHorizontalGroup(
            updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateMenuLayout.createSequentialGroup()
                .addGap(389, 389, 389)
                .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateMenuLayout.createSequentialGroup()
                        .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cleintIDLabel)
                            .addComponent(usernameLabel1)
                            .addComponent(DOBLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateMenuLayout.createSequentialGroup()
                                .addComponent(clientID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(passwordLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateMenuLayout.createSequentialGroup()
                                .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(DOBField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(usernameField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(36, 36, 36)
                                .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateMenuLayout.createSequentialGroup()
                                        .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(emailLabel1)
                                            .addComponent(nameLabel1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(emailField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(nameField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(updateButton, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addComponent(updateMenuLabel)))
        );
        updateMenuLayout.setVerticalGroup(
            updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateMenuLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(updateMenuLabel)
                .addGap(12, 12, 12)
                .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(updateMenuLayout.createSequentialGroup()
                        .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(usernameLabel1)
                            .addComponent(usernameField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(updateMenuLayout.createSequentialGroup()
                        .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordLabel1)
                            .addComponent(cleintIDLabel)
                            .addComponent(clientID)
                            .addComponent(passwordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailLabel1)
                            .addComponent(emailField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel1)
                            .addComponent(nameField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)))
                .addGap(19, 19, 19)
                .addGroup(updateMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DOBLabel1)
                    .addComponent(DOBField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButton))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        crudMenuPanel.add(updateMenu, "updateMenu");

        removeMenuLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        removeMenuLabel.setText("Remove Client Menu");

        clientIDLabel.setText("Client ID:");

        clientIDField.setMinimumSize(new java.awt.Dimension(178, 22));
        clientIDField.setPreferredSize(new java.awt.Dimension(178, 22));

        removeButton.setText("REMOVE");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeMenuLayout = new javax.swing.GroupLayout(removeMenu);
        removeMenu.setLayout(removeMenuLayout);
        removeMenuLayout.setHorizontalGroup(
            removeMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeMenuLayout.createSequentialGroup()
                .addGap(389, 389, 389)
                .addGroup(removeMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeButton)
                    .addGroup(removeMenuLayout.createSequentialGroup()
                        .addComponent(clientIDLabel)
                        .addGap(18, 18, 18)
                        .addComponent(clientIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(removeMenuLabel))
                .addContainerGap(643, Short.MAX_VALUE))
        );
        removeMenuLayout.setVerticalGroup(
            removeMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeMenuLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(removeMenuLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(removeMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientIDLabel)
                    .addComponent(clientIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeButton)
                .addContainerGap(106, Short.MAX_VALUE))
        );

        crudMenuPanel.add(removeMenu, "removeMenu");

        previousButton.setText("PREVIOUS");
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });
        crudButtonPanel.add(previousButton);

        nextButton.setText("NEXT");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        crudButtonPanel.add(nextButton);

        javax.swing.GroupLayout crudPanelLayout = new javax.swing.GroupLayout(crudPanel);
        crudPanel.setLayout(crudPanelLayout);
        crudPanelLayout.setHorizontalGroup(
            crudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(crudPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(crudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(crudMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(crudButtonPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        crudPanelLayout.setVerticalGroup(
            crudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(crudPanelLayout.createSequentialGroup()
                .addComponent(crudMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(crudButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        clientQueryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Client"));
        clientQueryPanel.setMinimumSize(new java.awt.Dimension(1276, 250));
        clientQueryPanel.setPreferredSize(new java.awt.Dimension(1276, 500));

        addQueryButton.setText("ADD QUERY");
        addQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addQueryButtonActionPerformed(evt);
            }
        });

        removeQueryButton.setText("REMOVE QUERY");
        removeQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeQueryButtonActionPerformed(evt);
            }
        });

        queryFull.setMinimumSize(new java.awt.Dimension(1276, 500));
        queryFull.setPreferredSize(new java.awt.Dimension(1276, 500));

        queryScroll.setMinimumSize(new java.awt.Dimension(1276, 200));
        queryScroll.setPreferredSize(new java.awt.Dimension(1276, 200));

        clearQueryButton.setText("CLEAR QUERY");
        clearQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearQueryButtonActionPerformed(evt);
            }
        });

        searchQueryButton.setText("SEARCH");
        searchQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchQueryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bookingQueryPanelLayout = new javax.swing.GroupLayout(clientQueryPanel);
        clientQueryPanel.setLayout(bookingQueryPanelLayout);
        bookingQueryPanelLayout.setHorizontalGroup(
            bookingQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingQueryPanelLayout.createSequentialGroup()
                .addComponent(addQueryButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeQueryButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clearQueryButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchQueryButton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(bookingQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookingQueryPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(queryScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 1270, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        bookingQueryPanelLayout.setVerticalGroup(
            bookingQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingQueryPanelLayout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addGroup(bookingQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addQueryButton)
                    .addComponent(removeQueryButton)
                    .addComponent(clearQueryButton)
                    .addComponent(searchQueryButton))
                .addContainerGap(3, Short.MAX_VALUE))
            .addGroup(bookingQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(bookingQueryPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(queryScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(32, Short.MAX_VALUE)))
        );

        clientTable.setModel(new javax.swing.table.DefaultTableModel(
            null,
            new String [] {
                "Client ID", "Username", "Type", "Name", "Email", "DOB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientTableMouseClicked(evt);
            }
        });
        tableScroll.setViewportView(clientTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(crudPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clientQueryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1298, Short.MAX_VALUE)
                    .addComponent(tableScroll))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(crudPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientQueryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>                        

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            String username = usernameField.getText();
            String name = nameField.getText();
    
            String password = String.valueOf(passwordField.getPassword());
    
            String email = emailField.getText();
    
            LocalDate DOB = DOBField.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    
            PersonDataFile pdf = new PersonDataFile("src\\caroodj\\Data\\Person.txt");
    
            String type = adminButton.isSelected() ? "admin" : "client";
    
    
            String[] entry = {(type.equals("admin") ? "AD:" : "CL:") + EntityId.generateId(), type, password, DOB+"", username, email, name};
    
            try {
                if (pdf.checkDuplicate(username)) {
                    pdf.addEntry(pdf.constructEntry(entry));
                    JOptionPane.showMessageDialog(null, "Person Successfully Added!");
                } else {
                    JOptionPane.showMessageDialog(null, "Username Already Taken!");
                }
            } catch(IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "An Error Occured!");
            }    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please use the correct format for each field or Missing Value");
        }
        
    }                                         

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (clientIDField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Input The Client ID");
        } else {
            String clientId = clientIDField.getText();
            PersonDataFile pdf = new PersonDataFile("src\\caroodj\\Data\\Person.txt");
            try {
                pdf.removeEntry(clientId);
                JOptionPane.showMessageDialog(null, "Person Successfully Removed!");
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "No Person With That ID!");
            }
        }
    }                                            

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        this.menuCode -= 1;

        if (this.menuCode == 0) {
            this.menuCode = 3;
        }

        java.awt.CardLayout card = (java.awt.CardLayout)crudMenuPanel.getLayout();
        card.previous(crudMenuPanel);
    }                                              

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        this.menuCode += 1;

        if (this.menuCode == 4) {
            this.menuCode = 1;
        }

        java.awt.CardLayout card = (java.awt.CardLayout)crudMenuPanel.getLayout();
        card.next(crudMenuPanel);
    }                                          

    private void addQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        clientQueries.add(new ClientQuery());

        ClientQuery lasClientQuery = clientQueries.get(clientQueries.size() - 1);

        this.queryCount += 1;

        lasClientQuery.setQueryLabel("Query " + this.queryCount);

        queryFull.add(lasClientQuery);
        queryFull.revalidate();
    }                                              

    private void removeQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        if (this.queryCount == 1) {
            JOptionPane.showMessageDialog(null, "Cannot Remove Anymore Query");
        } else {
            queryFull.remove(clientQueries.get(clientQueries.size() - 1));
    
            clientQueries.remove(clientQueries.size() - 1);
    
            this.queryCount -= 1;
    
            queryFull.revalidate();
        }
    }                                                 

    private void clearQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        for (Integer i = (clientQueries.size() - 1); i >= 0; i--) {
            queryFull.remove(clientQueries.size() - 1);
            clientQueries.remove(clientQueries.size() - 1);
            this.queryCount -= 1;
        }

        clientQueries.add(new ClientQuery());

        queryFull.add(clientQueries.get(0));

        this.queryCount += 1;

        queryFull.revalidate();
    }                                                

    private void searchQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        DefaultTableModel model = (DefaultTableModel) clientTable.getModel();
        model.setRowCount(0);

        for (ClientQuery clientQuery :clientQueries) {
            PersonDataFile pdf = new PersonDataFile("src\\caroodj\\Data\\Person.txt");

            HashMap<String, String> query = clientQuery.getQueryData();

            ArrayList<String[]> personList = pdf.queryDatabase(query).all();

            for (String[] person : personList) {
                model.addRow(new Object[] {person[0], person[4], person[1], person[6], person[5], person[3]});
            }
        }
    }                                                 

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {             
        try {
            String clientId = clientID.getText();

            String username = usernameField1.getText();
    
            String name = nameField1.getText();
    
            String password = String.valueOf(passwordField1.getPassword());
    
            String email = emailField1.getText();
    
            LocalDate DOB = DOBField1.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    
            PersonDataFile pdf = new PersonDataFile("src\\caroodj\\Data\\Person.txt");
            
            String[] query = {clientId, "client", "*", "*", "*", "*", "*"};
    
            Client client = Client.convertToClient(pdf.queryDatabase(pdf.createQuery(query)).first());
    
            HashMap<String, String> updateMap = new HashMap<String, String>();
    
            updateMap.put("Username", username);
            updateMap.put("Name", name);
            updateMap.put("Password", password);
            updateMap.put("Email", email);
            updateMap.put("DOB", DOB+"");
    
            if (client.update(updateMap)) {
                JOptionPane.showMessageDialog(null, "Client is Updated!");
            } else {
                JOptionPane.showMessageDialog(null, "An Error Occurred!");
            }    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please use the correct format for each field");
        }                                
        
    }
    
    private void clientTableMouseClicked(java.awt.event.MouseEvent evt) {
        Integer row = clientTable.getSelectedRow();

        if (this.menuCode == 2) {
            clientID.setText((String)clientTable.getValueAt(row, 0));
            usernameField1.setText((String)clientTable.getValueAt(row, 1));

            System.out.println(clientTable.getValueAt(row, 5));
            
            DOBField1.setDate(Date.valueOf((String)clientTable.getValueAt(row, 5)));
            emailField1.setText((String)clientTable.getValueAt(row, 4));
            nameField1.setText((String)clientTable.getValueAt(row, 3));

        } else if (this.menuCode == 3) {
            clientIDField.setText((String)clientTable.getValueAt(row, 0));
        }
    }

    private ArrayList<ClientQuery> clientQueries = new ArrayList<ClientQuery>();

    private Integer queryCount = 1;

    private JPanel queryFull; 

    private Integer menuCode = 1;

    
    // Variables declaration - do not modify                     
    private com.toedter.calendar.JDateChooser DOBField;
    private com.toedter.calendar.JDateChooser DOBField1;
    private javax.swing.JLabel DOBLabel;
    private javax.swing.JLabel DOBLabel1;
    private javax.swing.JButton addButton;
    private javax.swing.JPanel addMenu;
    private javax.swing.JLabel addMenuLabel;
    private javax.swing.JButton addQueryButton;
    private javax.swing.JRadioButton adminButton;
    private javax.swing.JPanel clientQueryPanel;
    private javax.swing.JButton clearQueryButton;
    private javax.swing.JLabel cleintIDLabel;
    private javax.swing.JRadioButton clientButton;
    private javax.swing.JLabel clientID;
    private javax.swing.JTextField clientIDField;
    private javax.swing.JLabel clientIDLabel;
    private javax.swing.JTable clientTable;
    private javax.swing.JPanel crudButtonPanel;
    private javax.swing.JPanel crudMenuPanel;
    private javax.swing.JPanel crudPanel;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField emailField1;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel emailLabel1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField nameField1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameLabel1;
    private javax.swing.JButton nextButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPasswordField passwordField1;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel passwordLabel1;
    private javax.swing.JButton previousButton;
    private javax.swing.JScrollPane queryScroll;
    private javax.swing.JButton removeButton;
    private javax.swing.JPanel removeMenu;
    private javax.swing.JLabel removeMenuLabel;
    private javax.swing.JButton removeQueryButton;
    private javax.swing.JButton searchQueryButton;
    private javax.swing.JScrollPane tableScroll;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanel;
    private javax.swing.ButtonGroup typeGroup;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JButton updateButton;
    private javax.swing.JPanel updateMenu;
    private javax.swing.JLabel updateMenuLabel;
    private javax.swing.JTextField usernameField;
    private javax.swing.JTextField usernameField1;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel usernameLabel1;
    // End of variables declaration                   
}
