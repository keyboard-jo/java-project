/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Menus.Panel;

import java.awt.Dimension;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Vector;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Objects.Booking;
import Objects.BookingDataFile;
import Objects.Car;

/**
 *
 * @author JUSTIN
 */
public class ConfirmBookingMenu extends javax.swing.JPanel {

    /**
     * Creates new form ManageBooking
     */
    public ConfirmBookingMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        queryFull = new JPanel();

        queryFull.setLayout(new BoxLayout(queryFull, BoxLayout.Y_AXIS));

        bookingQueries.add(new BookingQuery());

        queryFull.add(bookingQueries.get(0));
        queryScroll = new javax.swing.JScrollPane(queryFull);

        confirmBookingPanel = new javax.swing.JPanel();
        bookingIDLabel = new javax.swing.JLabel();
        bookingIDField = new javax.swing.JTextField();
        confirmButton = new javax.swing.JButton();
        bookingPanel = new javax.swing.JPanel();
        bookingQueryPanel = new javax.swing.JPanel();
        addQueryButton = new javax.swing.JButton();
        removeQueryButton = new javax.swing.JButton();
        clearQueryButton = new javax.swing.JButton();
        searchButtton = new javax.swing.JButton();
        tableScroll = new javax.swing.JScrollPane();
        bookingTable = new javax.swing.JTable();
        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        centerBookingQueryPanel = new javax.swing.JPanel();

        setMinimumSize(new java.awt.Dimension(1298, 1012));
        setPreferredSize(new java.awt.Dimension(1670, 1012));

        bookingPanel.setLayout(new BoxLayout(bookingPanel, BoxLayout.Y_AXIS));


        confirmBookingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Confirm Client Booking", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        bookingIDLabel.setText("Booking ID:");
        confirmBookingPanel.add(bookingIDLabel);

        bookingIDField.setText("BO:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        bookingIDField.setColumns(30);
        confirmBookingPanel.add(bookingIDField);

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButttonActionPerformed(evt);
            }
        });
        confirmBookingPanel.add(confirmButton);

        bookingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Clients", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        bookingQueryPanel.setMinimumSize(new java.awt.Dimension(1276, 250));
        bookingQueryPanel.setPreferredSize(new java.awt.Dimension(1276, 250));

        centerBookingQueryPanel.setMaximumSize(new java.awt.Dimension(1276, 250));
        centerBookingQueryPanel.setPreferredSize(new java.awt.Dimension(1276, 250));

        queryScroll.setMinimumSize(new java.awt.Dimension(1276, 200));
        queryScroll.setPreferredSize(new java.awt.Dimension(1276, 200));

        addQueryButton.setText("ADD QUERY");
        addQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addQueryButtonActionPerformed(evt);
            }
        });

        removeQueryButton.setText("REMOVE QUERY");
        removeQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeQueryButtonActionPerformed(evt);
            }
        });


        clearQueryButton.setText("CLEAR QUERY");
        clearQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearQueryButtonActionPerformed(evt);
            }
        });

        searchButtton.setText("SEARCH");
        searchButtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bookingQueryPanelLayout = new javax.swing.GroupLayout(bookingQueryPanel);
        bookingQueryPanel.setLayout(bookingQueryPanelLayout);
        bookingQueryPanelLayout.setHorizontalGroup(
            bookingQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingQueryPanelLayout.createSequentialGroup()
                .addGroup(bookingQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bookingQueryPanelLayout.createSequentialGroup()
                        .addComponent(addQueryButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeQueryButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clearQueryButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButtton))
                    .addComponent(queryScroll, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        bookingQueryPanelLayout.setVerticalGroup(
            bookingQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingQueryPanelLayout.createSequentialGroup()
                .addComponent(queryScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bookingQueryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addQueryButton)
                    .addComponent(removeQueryButton)
                    .addComponent(clearQueryButton)
                    .addComponent(searchButtton)))
        );

        centerBookingQueryPanel.add(bookingQueryPanel);

        bookingTable.setModel(new javax.swing.table.DefaultTableModel(
            null,
            new String [] {
                "Booking ID", "Start Date", "End Date", "Confirmed", "Cancelled", "Car ID", "Car Model", " Car Rental Cost", "Car Rented", "Client ID", "Client Username", "Payment Method"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        // bookingTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        bookingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingTableMouseClicked(evt);
            }
        });
        tableScroll.setViewportView(bookingTable);
        tableScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        tableScroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);

        bookingPanel.add(centerBookingQueryPanel);
        bookingPanel.add(Box.createRigidArea(new Dimension(0, 5)));
        bookingPanel.add(tableScroll);
        

        titleLabel.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        titleLabel.setText("CONFIRM BOOKING");
        titlePanel.add(titleLabel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(confirmBookingPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bookingPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmBookingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bookingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>                                 

    private void addQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        bookingQueries.add(new BookingQuery());

        BookingQuery lastBookingQuery = bookingQueries.get(bookingQueries.size() - 1);

        this.queryCount += 1;

        lastBookingQuery.setQueryLabel("Query "+queryCount);

        queryFull.add(lastBookingQuery);
        queryFull.revalidate();
    }

    private void removeQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (this.queryCount == 1) {
            JOptionPane.showMessageDialog(null, "Cannot Remove Anymore Query");
        } else {
            queryFull.remove(bookingQueries.get(bookingQueries.size() - 1));
    
            bookingQueries.remove(bookingQueries.size() - 1);
    
            this.queryCount -= 1;
    
            queryFull.revalidate();
        }
    }
    private void clearQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {
        for (Integer i = (bookingQueries.size() - 1); i >= 1; i--) {
            queryFull.remove(bookingQueries.size() - 1);
            bookingQueries.remove(bookingQueries.size() - 1);
            this.queryCount -= 1;
        }

        queryFull.revalidate();
    }

    private void searchButttonActionPerformed(java.awt.event.ActionEvent evt) {
        DefaultTableModel model = (DefaultTableModel) bookingTable.getModel();
        model.setRowCount(0);

        for (BookingQuery bookingQuery : bookingQueries) {
            BookingDataFile bdf = new BookingDataFile("src\\caroodj\\Data\\Booking.txt");
            HashMap<String, String> query = bookingQuery.getQueryData();

            ArrayList<Booking> bookingList = bdf.queryDatabase(query).all();


            for (Booking booking : bookingList) {
                if (booking.isConfirmed.equals(false)) {
                    model.addRow(new Object[] {booking.getId(), booking.startDate, booking.endDate, booking.isConfirmed, booking.isCanceled, booking.car.getId(), booking.car.model, booking.car.rentalCost, booking.car.isRented, booking.client.getId(), booking.client.username, booking.paymentMethod});
                }
            }
        }
    }
    
    private void confirmButttonActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            String bookingID = bookingIDField.getText();

            BookingDataFile bdf = new BookingDataFile("src\\caroodj\\Data\\Booking.txt");

            String[] bookingQuery = {bookingID, "*", "*", "*", "*", "*", "*", "*"};

            Booking booking = bdf.queryDatabase(bdf.createQuery(bookingQuery)).first();

            HashMap<String, String> updateMap = new HashMap<String, String>();

            updateMap.put("Confirmed", true+"");

            if (booking.update(updateMap)) {
                JOptionPane.showMessageDialog(null, "Booking is Confirmed");
            } else {
                JOptionPane.showMessageDialog(null, "An Error Occured");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Booking ID not found");
        }
        
    }

    private void bookingTableMouseClicked(java.awt.event.MouseEvent evt) {
        Integer row = bookingTable.getSelectedRow();
        bookingIDField.setText((String)bookingTable.getValueAt(row, 0));
    }        

    private ArrayList<BookingQuery> bookingQueries = new ArrayList<BookingQuery>();
    private Integer queryCount = 1;

    private JPanel queryFull;    

    // Variables declaration - do not modify                     
    private javax.swing.JButton addQueryButton;
    private javax.swing.JButton removeQueryButton;
    private javax.swing.JButton clearQueryButton;
    private javax.swing.JTextField bookingIDField;
    private javax.swing.JLabel bookingIDLabel;
    private javax.swing.JPanel bookingPanel;
    private javax.swing.JPanel bookingQueryPanel;
    private javax.swing.JTable bookingTable;
    private javax.swing.JPanel confirmBookingPanel;
    private javax.swing.JButton confirmButton;
    private javax.swing.JScrollPane queryScroll;
    private javax.swing.JButton searchButtton;
    private javax.swing.JScrollPane tableScroll;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JPanel centerBookingQueryPanel;
    // End of variables declaration                   
}
